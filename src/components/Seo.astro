---
import { SEO } from 'astro-seo';
import { description as defaultDescription, siteName } from "../utils/constants"

interface Props {
    title?: string;
    description?: string;
    path?: string;
}

const { title: titleProp, description: descriptionProp, path: pathProp } = Astro.props
const title = titleProp ? `${titleProp} | ${siteName}` : siteName;
const description = descriptionProp || defaultDescription;
const path = pathProp ? `/og/${pathProp}.png` : `/cover.png`;
---

<SEO
    title={title}
    description={description}
    openGraph={{
        basic: {
            title: title,
            type: 'website',
            image: path,
        },
        optional: {
            siteName,
        }
    }}
    twitter={{
        card: 'summary_large_image',
        title,
        description,
        image: path,
        imageAlt: `${title}`
    }}
    extend={{
        link: [
            { rel: 'canonical', href: "/" },
            { rel: 'icon', href: '/favicon-16x16.png', sizes: "16x16", type: 'image/png' },
            { rel: 'icon', href: '/favicon-32x32.png', sizes: "32x32", type: 'image/png' },
            { rel: 'apple-touch-icon', href: '/apple-touch-icon.png', sizes: "180x180", type: 'image/png' },
            { rel: 'icon', href: '/favicon-512x512.png', sizes: "512x512", type: 'image/png' },
            { rel: 'icon', href: '/favicon.svg', type: 'image/svg+xml' },
            { rel: 'mask-icon', href: '/mask-icon.svg', color: 'white' } as any,
        ],
        meta: [
            { name: 'viewport', content: 'width=device-width, initial-scale=1' },
            { name: 'generator', content: Astro.generator }
        ]
    }}
/>
